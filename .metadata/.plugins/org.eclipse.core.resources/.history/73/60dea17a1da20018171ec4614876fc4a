package ass1;

import java.io.File;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Scanner;

public class HotelBookingSystem {
	private ArrayList<Hotel> hotels;
	
	public HotelBookingSystem() {
		this.hotels = new ArrayList<Hotel>();
	}
	
	public void makeNewHotel(String input) {
		// Create new instance of hotel booking system
        // each hotel has 1 booking system
        
        String[] allInput = input.split(" ");
		
        // Handles request for Hotel Creation
        
      	  ArrayList<Room> rooms  = new ArrayList<Room>();
      	  // create all the rooms and put it in a list
      	  for(int i =2; i <allInput.length;i+=2) {
      		  rooms.add(new Room(Integer.valueOf(allInput[i]), Integer.valueOf(allInput[i+1]), allInput[1]));
      		  //System.out.println(allInput[i]);
      		  //System.out.println(allInput[i+1]);
      		  //System.out.println(allInput[1]);
      	  }
      	  
      	  int exist=0;
      	  for(Hotel h:hotels) {
      		  exist=0;
      		  if(h.getHotelName().equals(allInput[1])) {
      			  h.addRoom(rooms);
      			  exist=1;
      			  //System.out.println("Hotel exist");
      			  break;
      		  }
      	  }
      	  if(exist==0) {
      		  Hotel x = new Hotel(allInput[1], rooms);
      		  hotels.add(x);
      	  }
      	  
      	 
      	  
      	  //display the rooms in every hotel
          // testing purpose
          /*
      	  for(Hotel e : hotels) {
        	  ArrayList<Room> all = e.getRoom();
        	  for(Room l : all) {
        		  System.out.println(l.toString());
        	  }
        	  System.out.println("");
          }*/
        
      	  
	}
	
	public ArrayList<Room> findARoom(int ws, int wd, int wt, LocalDate start, LocalDate end) {
		ArrayList <Room> result = new ArrayList<Room>();
		int s = 0;// single room in the hotel
		int d = 0;
		int t = 0;
		int found=0;
		for(Hotel h : hotels) {
			ArrayList<Room> hotelRooms = h.getRoom();
			Booking b = null;
			s=0;
			d=0;
			t=0;
			
			for(Room r : hotelRooms) {
				// b is the booking for that room
				b=r.getBooking();
				if(b==null) {
					if(r.getCapacity()==1 && s<ws) {
						s++;
					} else if(r.getCapacity()==2 && d<wd) {
						d++;
					} else if(r.getCapacity()==3 && t<wt) {
						t++;
					}
					result.add(r);// add the room first
				} else {
					// check the date first
					LocalDate bookingStart = b.getStart(); // start date of that room
					LocalDate bookingEnd = b.getEnd(); //end date of that room
					if(bookingStart.isAfter(end)||bookingStart.isEqual(end)||bookingEnd.isBefore(start) || bookingEnd.isEqual(start)) {
						
						// now check the capacity
						if(r.getCapacity()==1 && s!=ws) {
							s++;
						} else if(r.getCapacity()==2 && d!=wd) {
							d++;
						} else if(r.getCapacity()==3 && t!=wt) {
							t++;
						}
					}
					result.add(r);
				}
				
				
			}
			// check if we found the room
			if(s==ws && d==wd && t==wt) {
				// if we found the room return the result
				return result;
			} else {
				// if we dont find the room, empty the result;
				result.clear();
			}
		}
		
		return null;
	}
	
	public void makeNewBooking(String input, String typeOfBooking) {
		String[] allInput = input.split(" ");
		String name = allInput[1];
	    //System.out.println(name);
	    String booking_date = "2018-"+allInput[2]+"-"+allInput[3];
	    DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyy-MMM-dd");
	    LocalDate date = LocalDate.parse(booking_date, format); // date is the start date
	    int night = Integer.valueOf(allInput[4]);
	    ArrayList<Room> toBeBooked = new ArrayList<Room>();
	  
	    // starting from allInput[5] and so on is the room type and the amount of room booked
	    int singleRoom = 0;
	    int doubleRoom = 0;
	    int tripleRoom = 0;
	    // count the number of single double and triple room wanted
	    for(int i=5;i<allInput.length; i+=2) {
	    	
	    	if(allInput[i].equals("single")) {
	    		
	    		singleRoom+=Integer.parseInt(allInput[i+1]);
	    	} else if(allInput[i].equals("double")) {
	    		
	    		doubleRoom+=Integer.parseInt(allInput[i+1]);
	    	} else if(allInput[i].equals("triple")) {
	    		
	    		tripleRoom+=Integer.parseInt(allInput[i+1]);
	    	}
	    	
	    }
	    /*
	  	// testing--------
	  	System.out.println("s "+singleRoom);
		  	System.out.println("d "+doubleRoom);
		  	System.out.println("t "+tripleRoom);
	     */
	    
	    
  	  	Hotel wanted = null;
  	  	//ArrayList<Room> roomCollection = new ArrayList<Room>();
  	  	System.out.println(date+" "+date.plusDays(night));
  	  	ArrayList<Room> roomCollection = findARoom(singleRoom, doubleRoom,tripleRoom, date, date.plusDays(night));
  	  	String hotelName = roomCollection.get(0).getHotel();
  	  	for(Hotel p : hotels) {
  	  		if(p.getHotelName().equals(hotelName)) {
  	  			wanted = p;
  	  			break;
  	  		}
  	  	}
  	  	if(wanted==null) {
  	  		System.out.println("Error in finding hotel");
  	  	} 
  	  	/*
  	  	int found = 0;
  	  	for(Hotel h : hotels) {
  	  		found=0;
  	  		roomCollection = h.getRoom();
  	  		//h.displayRoom();
  	  		//ArrayList<Room> order = new ArrayList<Room>();
  	  		int s = 0;// single room in hotel h
  	  		int d = 0;// double room in hotel h
  	  		int t = 0;// triple room in hotel h
  		  
  		  
  		  
  	  		for (Room r : roomCollection) {
  	  			//System.out.println(r.toString());
  	  			if(r.getCapacity()==1) {
  	  				s++;
  	  			} else if (r.getCapacity()==2) {
  	  				d++;
  	  			} else if (r.getCapacity()==3) {
  	  				t++;
  	  			}
  			  
  	  			if(singleRoom<=s && doubleRoom<=d && tripleRoom<=t) {
  	  				found=1;
  	  				//System.out.println("Rooms found in hotel "+h.getHotelName()+" for "+name);
  	  				wanted = h;
  	  				break;
  	  			}
  			  
  	  		}
  	  		// to stop the loop from searching in other hotel again
  	  		if(found==1) {
  	  			break;
  	  		}
  	  	}
  	  
  	  	//System.out.println(s+" " +" "+ d+" " +t);
  	  	
  	  	if(wanted==null||found==0) {
  	  		System.out.println("Booking rejected");
  	  		return;
  	  	} else {
  		  	// get all rooms and do some checking on the date
  		  	ArrayList<Room> hotelRooms = wanted.getRoom();
  		  
  		  	int ws = singleRoom;
  		  	int wd = doubleRoom;
  		  	int wt = tripleRoom;
  		  	// we are sure that the hotel contains the room
  		  	for(Room r : hotelRooms) {
  		  		//System.out.println(r.toString());
  		  		Booking currRoom = r.getBooking();
  			  	if(r.getCapacity()==1 && ws!=0 && 
  			  			(currRoom==null || currRoom.getEnd().equals(date) 
  			  			|| currRoom.getEnd().isBefore(date) 
  			  			||currRoom.getStart().isAfter(date) ||currRoom.getStart().isEqual(date))) {
  				  	//System.out.println("S add "+r.getRoomNumber());	  		
  				  	toBeBooked.add(r);
  				  	ws--;
  			  	} else if (r.getCapacity()==2 && wd!=0 && (currRoom==null || currRoom.getEnd().equals(date) || currRoom.getEnd().isBefore(date) ||currRoom.getStart().isAfter(date) ||currRoom.getStart().isEqual(date))) {
  				  	//System.out.println("D add "+r.getRoomNumber());
  				  	toBeBooked.add(r);
  				  	wd--;
  			  	} else if (r.getCapacity()==3 && wt!=0 && (currRoom==null || currRoom.getEnd().equals(date) || currRoom.getEnd().isBefore(date) ||currRoom.getStart().isAfter(date) ||currRoom.getStart().isEqual(date))) {
  				  	//System.out.println("T add "+r.getRoomNumber());
  				  	toBeBooked.add(r);
  				  	wt--;
  			  	}
  			  	if(ws==0 && wd==0 && wt==0) {
  				  	break;
  			  	}
  			  
  		  	}
  		  	
  	  	}
  	  	*/
  	  	// Make the booking
  		System.out.print(typeOfBooking+" ");
	  	
  	  	wanted.makeBooking(toBeBooked, name, date, night);
  	  	
  	  	// test purpose: display all the booking
  	  	/*for(Booking b: wanted.getBookings()) {
  	  		System.out.print(typeOfBooking+" ");
  	  		System.out.println(b.printBook());
  	  	}
  	  	System.out.println("\n\n");
		*/
	}
	
	public void cancelBooking(String input) {
		String[] allInput = input.split(" ");
		String name = allInput[1];
		
		int found = 0;
		for (Hotel h : hotels) {
			ArrayList<Booking> hotelBookings = h.getBookings();
			found = 0;
			int hotelIndex = -1;
			for(Booking b : hotelBookings) {
				if(b.getName().equals(name)) {
					found=1;
					hotelIndex=hotels.indexOf(h);
				}
				/* ArrayList<Room> rooms = b.getRooms();
			  
			  	//rooms.forEach((room) -> room.setBooking(null));
			  	for(Room r : rooms) {
				  //if(r.getBooking()!=null) {
					  r.setBooking(null);
				  //}
			  	}
			  	// cancel the booking after we remove the booking
			  	// from the room
			  	h.cancelBooking(b.getName());
			  	
		  	}*/
			}
			if(found==1) {
				Hotel rem = hotels.get(hotelIndex);
				rem.cancelBooking(name);
				break;
			}
  	  	}
		if (found==0) {
  	  		// if no room was found just exit and dont print anything
  	  		return;
  	  	}
  	  	/*
  	  	System.out.println("DELETION:\n");
  	  	for(Hotel h : hotels) {
  	  		if(h.getBookings()==null) break;
  	  		for(Booking b: h.getBookings()) {
  	  			System.out.println(b.printBook());
  	  		}
  	  	}
  	  	System.out.println("==========\n\n");*/
	}
	
	public void changeBooking(String input) {
		String[] allInput = input.split(" ");
		String name = allInput[1];
		cancelBooking(name);
		makeNewBooking(input, "Change");
		
	}
	
	public static void main (String args[]) {
		  Scanner sc = null;
		  HotelBookingSystem hotelSys= new HotelBookingSystem();

	      try
	      {
	    	  // args[0] is the first command line argument	    	  
	    	  sc = new Scanner(new File(args[0]));
	    	  // Read input from the scanner here
	          while(sc.hasNextLine()) { // go through all lines in input
		    	  String input = sc.nextLine();
		          String[] allInput = input.split(" ");
		          if(allInput[0].equals("Hotel")) { // Handles hotel creation
		        	  hotelSys.makeNewHotel(input);
		        	  
		          } else if (allInput[0].equals("Booking")) { // Handles booking creation
		        	  hotelSys.makeNewBooking(input, "Booking");
		        	  
		          } else if (allInput[0].equals("Cancel")) {
		        	  hotelSys.cancelBooking(input);
		        	  
		          } else if (allInput[0].equals("Change")) {
		        	  hotelSys.cancelBooking(input);
		        	  hotelSys.makeNewBooking(input, "Change");
		          }
		          
	          }
	      }
	      catch (FileNotFoundException e)
	      {
	          System.out.println(e.getMessage());
	      }
	      finally
	      {
	          if (sc != null) sc.close();
	      }
	}
}
